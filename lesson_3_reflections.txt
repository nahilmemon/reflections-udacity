When would you want to use a remote repository rather than keeping all your work
local?

    You would want to use a remote repository when
    - you are working on the same project with other people.
    - you want your to be publicly available so that you can easily show other people what you're working on.
    - you want your work to be open source.
    - you are working on the same project from more than one computer/laptop.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You might want to always pull changes manually if you are working on something and are not ready to merge your changes with what's available on GitHub.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A branch is made when you want to split up your commit history so that it is no longer linear. This can only take place within one repository.
    A clone is made when you want to copy a repository. You can clone a repository from GitHub onto your local computer/laptop. You can also clone a repository from one location on your computer/laptop to another location on the same computer/laptop.
    A fork is made when you want to copy (clone) a repository from someone else's GitHub account directly into your own GitHub account.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefits of having the last known state of the remote stored locally include
    - when you think there may be potential conflicts with the most recent state of the remote and the most recent state of your local version of the repository. Having a local copy of the remote makes it easier to see the differences in the repositories and also makes it easier to merge the local copy of the remote with what you changes you have made locally.
    - when you need to go offline for a while. This way you can still access what's on the remote (until the point you went offline).

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    If I didn't use Git and GitHub while working on a project with other people, then I'd probably use Google Drive to share files easily and Google Docs if the project allows for it.
    It's easier to communicate with people in person or using FB Messenger or Skype.
    However, it would be harder to see all the changes each person makes every so often and figure out how to seemlessly merge all the changes together, especially for work that can't be easily split up into sections. It would also be harder to revert files back to an older state if it should ever be necessary.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    You would want to make changes in a separate branch rather than directly in master when:
    - you want to add an experimental new feature which may/may not work out.
    - you want to completely redesign the visual layout of a project (and thus the interactions involved too).
    - you want to create a version for another language speaking audience.
    - you aren't sure whether the changes you're making would be completely approved by all of your collaborators.
    It's useful to work in separate branches because it keeps the commit history organized. It also makes it easy to get feedback from your collaborators on that particular work. Also, if something goes completely wrong or you change your mind about your new additions, you can easily revert back to the master branch without having to worry about having completely messed up the original project.
    On the other hand, it's useful to work in master directly because it's faster and much less complicated than making new branches and then making pull requests or merge requests with master.